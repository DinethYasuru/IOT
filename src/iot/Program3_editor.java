/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iot;

import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import static java.lang.Thread.sleep;
import java.util.Iterator;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.UIManager;

/**
 *
 * @author Dineth
 */
public class Program3_editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    public Program3_editor() throws IOException {
        getData();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Program 02 Editor ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jToggleButton1.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton1.setText("Relay 01");
        jToggleButton1.setActionCommand("Relay01");
        jToggleButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton1MouseWheelMoved(evt);
            }
        });
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton2.setText("Relay 02");
        jToggleButton2.setActionCommand("Relay01");
        jToggleButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton2.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton2MouseWheelMoved(evt);
            }
        });
        jToggleButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton2MouseClicked(evt);
            }
        });
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton3.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton3.setText("Relay 03");
        jToggleButton3.setActionCommand("Relay01");
        jToggleButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton3.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton3MouseWheelMoved(evt);
            }
        });
        jToggleButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton3MouseClicked(evt);
            }
        });
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton4.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton4.setText("Relay 04");
        jToggleButton4.setActionCommand("Relay01");
        jToggleButton4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton4.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton4MouseWheelMoved(evt);
            }
        });
        jToggleButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton4MouseClicked(evt);
            }
        });
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jToggleButton5.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton5.setText("Relay 05");
        jToggleButton5.setActionCommand("Relay01");
        jToggleButton5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton5.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton5MouseWheelMoved(evt);
            }
        });
        jToggleButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton5MouseClicked(evt);
            }
        });
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jToggleButton7.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton7.setText("Relay 07");
        jToggleButton7.setActionCommand("Relay01");
        jToggleButton7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton7.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton7MouseWheelMoved(evt);
            }
        });
        jToggleButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton7MouseClicked(evt);
            }
        });
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });

        jToggleButton6.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton6.setText("Relay 06");
        jToggleButton6.setActionCommand("Relay01");
        jToggleButton6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton6.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton6MouseWheelMoved(evt);
            }
        });
        jToggleButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton6MouseClicked(evt);
            }
        });
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });

        jToggleButton8.setBackground(new java.awt.Color(255, 51, 102));
        jToggleButton8.setText("Relay 08");
        jToggleButton8.setActionCommand("Relay01");
        jToggleButton8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jToggleButton8.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jToggleButton8MouseWheelMoved(evt);
            }
        });
        jToggleButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton8MouseClicked(evt);
            }
        });
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jToggleButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(160, 160, 160))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jToggleButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addComponent(jToggleButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String p1_status = null, p1_sd = null, p1_rt = null;
    String p2_status = null, p2_sd = null, p2_rt = null;
    String p3_status = null, p3_sd = null, p3_rt = null;
    String p4_status = null, p4_sd = null, p4_rt = null;
    String p5_status = null, p5_sd = null, p5_rt = null;
    String p6_status = null, p6_sd = null, p6_rt = null;
    String p7_status = null, p7_sd = null, p7_rt = null;
    String pulse = null;
    int int_pulse = 0;
    /**
     *
     * @throws IOException
     */

 
    

    public void getData() throws IOException {
        FileReader reader = new FileReader("src\\config\\configure.properties");
        Properties prop = new Properties();
        prop.load(reader);
        this.p1_status = prop.getProperty("p1_status");
        this.p1_sd = prop.getProperty("p1_sd");
        this.p1_rt = prop.getProperty("p1_rt");

        this.p2_status = prop.getProperty("p2_status");
        this.p2_sd = prop.getProperty("p2_sd");
        this.p2_rt = prop.getProperty("p2_rt");

        this.p3_status = prop.getProperty("p3_status");
        this.p3_sd = prop.getProperty("p3_sd");
        this.p3_rt = prop.getProperty("p3_rt");

        this.p4_status = prop.getProperty("p4_status");
        this.p4_sd = prop.getProperty("p4_sd");
        this.p4_rt = prop.getProperty("p4_rt");

        this.p5_status = prop.getProperty("p5_status");
        this.p5_sd = prop.getProperty("p5_sd");
        this.p5_rt = prop.getProperty("p5_rt");

        this.p6_status = prop.getProperty("p6_status");
        this.p6_sd = prop.getProperty("p6_sd");
        this.p6_rt = prop.getProperty("p6_rt");

        this.p7_status = prop.getProperty("p7_status");
        this.p7_sd = prop.getProperty("p7_sd");
        this.p7_rt = prop.getProperty("p7_rt");

        this.pulse = prop.getProperty("pulse");

        /* String y = prop.getProperty("reg_valve");
        String x = Integer.parseInt(y);
        File file = new File("src\\config\\configure.properties");
        OutputStream out = new FileOutputStream(file);
        prop.setProperty("reg_valve", "162null3");
        prop.store(out, null);

        System.out.prStringln(prop.getProperty("reg_valve"));*/
        reader.close();
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     
           
            System.out.println(p1_status);
            if (this.p1_status.equals("1")) {
                jToggleButton1.setSelected(true);
                jToggleButton1.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton1.setSelected(false);
                jToggleButton1.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p2_status.equals("1")) {
                jToggleButton2.setSelected(true);
                jToggleButton2.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton2.setSelected(false);
                jToggleButton2.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p3_status.equals("1")) {
                jToggleButton3.setSelected(true);
                jToggleButton3.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton3.setSelected(false);
                jToggleButton3.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p4_status.equals("1")) {
                jToggleButton4.setSelected(true);
                jToggleButton4.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton4.setSelected(false);
                jToggleButton4.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p5_status.equals("1")) {
                jToggleButton5.setSelected(true);
                jToggleButton5.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton5.setSelected(false);
                jToggleButton5.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p6_status.equals("1")) {
                jToggleButton7.setSelected(true);
                jToggleButton7.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton7.setSelected(false);
                jToggleButton7.setBackground(new java.awt.Color(255, 51, 102));
            }

            if (this.p7_status.equals("1")) {
                jToggleButton6.setSelected(true);
                jToggleButton6.setBackground(new java.awt.Color(0, 102, 204));
            } else {
                jToggleButton6.setSelected(false);
                jToggleButton6.setBackground(new java.awt.Color(255, 51, 102));
            }

            int x = 0;

        

    }//GEN-LAST:event_formWindowOpened

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked

        if (jToggleButton1.isSelected()) {
            this.p1_status = "1";
            jToggleButton1.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p1_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p1_status = "0";
            jToggleButton1.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p1_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton1MouseClicked
    public void saveData(String key, String value) throws IOException {
        FileReader reader2 = new FileReader("src\\config\\configure.properties");
        Properties prop2 = new Properties();
        prop2.load(reader2);
        reader2.close();
        File file2 = new File("src\\config\\configure.properties");
        OutputStream out2 = new FileOutputStream(file2);

        prop2.setProperty(key, value);

        prop2.store(out2, null);
        out2.close();

    }


    private void jToggleButton1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton1MouseWheelMoved

        if (!jToggleButton1.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p1_status = "1";
                this.p1_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 1 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p1_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 1 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p1_status", String.valueOf(this.p1_status));
                prop.setProperty("p1_sd", String.valueOf(this.p1_sd));
                prop.setProperty("p1_rt", String.valueOf(this.p1_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton1MouseWheelMoved

    private void jToggleButton2MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton2MouseWheelMoved
        if (!jToggleButton2.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p2_status = "1";
                this.p2_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 2 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p2_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 2 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p2_status", String.valueOf(this.p2_status));
                prop.setProperty("p2_sd", String.valueOf(this.p2_sd));
                prop.setProperty("p2_rt", String.valueOf(this.p2_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton2MouseWheelMoved

    private void jToggleButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton2MouseClicked
        if (jToggleButton2.isSelected()) {
            this.p2_status = "1";
            jToggleButton2.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p2_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p2_status = "0";
            jToggleButton2.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p2_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton2MouseClicked

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed

    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton3MouseWheelMoved
       if (!jToggleButton3.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p3_status = "1";
                this.p3_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 3 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p3_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 3 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p3_status", String.valueOf(this.p3_status));
                prop.setProperty("p3_sd", String.valueOf(this.p3_sd));
                prop.setProperty("p3_rt", String.valueOf(this.p3_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jToggleButton3MouseWheelMoved

    private void jToggleButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton3MouseClicked
        if (jToggleButton3.isSelected()) {
            this.p3_status = "1";
            jToggleButton3.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p3_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p3_status = "0";
            jToggleButton3.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p3_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton3MouseClicked

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton4MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton4MouseWheelMoved
       if (!jToggleButton4.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p4_status = "1";
                this.p4_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 4 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p4_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 4 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p4_status", String.valueOf(this.p4_status));
                prop.setProperty("p4_sd", String.valueOf(this.p4_sd));
                prop.setProperty("p4_rt", String.valueOf(this.p4_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton4MouseWheelMoved

    private void jToggleButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton4MouseClicked
        if (jToggleButton4.isSelected()) {
            this.p4_status = "1";
            jToggleButton4.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p4_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p4_status = "0";
            jToggleButton4.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p4_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton4MouseClicked

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton5MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton5MouseWheelMoved
       if (!jToggleButton5.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p5_status = "1";
                this.p5_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 5 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p5_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 5 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p5_status", String.valueOf(this.p5_status));
                prop.setProperty("p5_sd", String.valueOf(this.p5_sd));
                prop.setProperty("p5_rt", String.valueOf(this.p5_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton5MouseWheelMoved

    private void jToggleButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton5MouseClicked
        if (jToggleButton5.isSelected()) {
            this.p5_status = "1";
            jToggleButton5.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p5_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p5_status = "0";
            jToggleButton5.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p5_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton5MouseClicked

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton7MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton7MouseWheelMoved
       if (!jToggleButton7.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p7_status = "1";
                this.p7_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 7 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p7_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 7 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p7_status", String.valueOf(this.p7_status));
                prop.setProperty("p7_sd", String.valueOf(this.p7_sd));
                prop.setProperty("p7_rt", String.valueOf(this.p7_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton7MouseWheelMoved

    private void jToggleButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton7MouseClicked
        if (jToggleButton7.isSelected()) {
            this.p7_status = "1";
            jToggleButton7.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p7_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p7_status = "0";
            jToggleButton7.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p7_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton7MouseClicked

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton6MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton6MouseWheelMoved
        if (!jToggleButton6.isSelected()) {
            try {
                FileReader reader = new FileReader("src\\config\\configure.properties");
                Properties prop = new Properties();
                prop.load(reader);
                reader.close();
                File file = new File("src\\config\\configure.properties");
                OutputStream out = new FileOutputStream(file);

                this.p6_status = "1";
                this.p6_sd = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Starting Delay in miliseconds", "Relay 6 Programmer", JOptionPane.INFORMATION_MESSAGE));
                this.p6_rt = String.valueOf(JOptionPane.showInputDialog(null, "Enter the Run time in miliseconds", "Relay 6 Programmer", JOptionPane.INFORMATION_MESSAGE));
                prop.setProperty("p6_status", String.valueOf(this.p6_status));
                prop.setProperty("p6_sd", String.valueOf(this.p6_sd));
                prop.setProperty("p6_rt", String.valueOf(this.p6_rt));
                prop.store(out, null);
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Unable to edit while running", "Runtime Editing Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jToggleButton6MouseWheelMoved

    private void jToggleButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton6MouseClicked
        if (jToggleButton6.isSelected()) {
            this.p6_status = "1";
            jToggleButton6.setBackground(new java.awt.Color(0, 102, 204));
            try {
                this.saveData("p6_status", "1");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            this.p6_status = "0";
            jToggleButton6.setBackground(new java.awt.Color(255, 51, 102));
            try {
                this.saveData("p6_status", "0");
            } catch (IOException ex) {
                Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jToggleButton6MouseClicked

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jToggleButton8MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jToggleButton8MouseWheelMoved
        this.pulse = JOptionPane.showInputDialog(null, "Enter pulse value in miliseconds", "Pulse programmer", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jToggleButton8MouseWheelMoved

    private void jToggleButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton8MouseClicked
       
    }//GEN-LAST:event_jToggleButton8MouseClicked

    private void jToggleButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (Stringroduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Program3_editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Program3_editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Program3_editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Program3_editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Program3_editor().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Program3_editor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    // End of variables declaration//GEN-END:variables

}
